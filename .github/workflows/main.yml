name: test
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: encode password
        id: encoded
        run: |
          PASSWORD=$(printf %s ${{ secrets.SSH_PASSWORD }} | jq -sRr @uri )
          echo "PASSWORD=$PASSWORD" >> $GITHUB_OUTPUT

      - name: get runner ip
        id: runner_ip
        run: |
          ip=$(curl https://api.ipify.org)
          echo "ip=ip" >> $GITHUB_OUTPUT

      - name: whitelist ip on hosting (o2switch)
        shell: bash
        run: |
          ENDPOINT="frontend/o2switch/o2switch-ssh-whitelist/index.live.php"
          
          echo "Actual whitelist : "
          
          LIST=$(curl -sX GET "https://${{ secrets.SSH_USER }}:${{ steps.encoded.outputs.PASSWORD }}@${{ secrets.SSH_HOST }}:2083/$ENDPOINT?r=list")
          echo "$LIST" | jq -c '.data.list[]'
          
          LIST_LENGTH=$(echo "$LIST" | jq '.data.list | length')
          echo "Length : $LIST_LENGTH)
          
          if [ $LIST_LENGTH -eq "10" ]; then 
          
          echo "Whitelist full !"
          
          IP_TO_DELETE=$($LIST | jq -r '.data.list[8].address')
          echo "Deleting this IP from whitelist: $IP_TO_DELETE (in & out)"
          
          curl -sX GET "https://${{ secrets.SSH_USER }}:${{ steps.encoded.outputs.PASSWORD }}@${{ secrets.SSH_HOST }}:2083/$ENDPOINT?r=remove&address=$IP_TO_DELETE&direction=in&port=22" | jq
          sleep 3
          curl -sX GET "https://${{ secrets.SSH_USER }}:${{ steps.encoded.outputs.PASSWORD }}@${{ secrets.SSH_HOST }}:2083/$ENDPOINT?r=remove&address=$IP_TO_DELETE&direction=out&port=22" | jq
          sleep 3
          
          echo "IP : $IP_TO_DELETE (in & out) deleted from whitelist";
          
          fi
          
          echo "Attempt to whitelist IP..."
          curl -sX POST -d 'whitelist[address]=${{ steps.runner_ip.outputs.ip }}' -d 'whitelist[port]=22' "https://${{ secrets.SSH_USER }}:${{ steps.encoded.outputs.password }}@${{ secrets.SSH_HOST }}:2083/$ENDPOINT?r=add" | jq
